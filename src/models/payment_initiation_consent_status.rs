/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.84.5
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PaymentInitiationConsentStatus : The status of the payment consent.  `UNAUTHORISED`: Consent created, but requires user authorisation.  `REJECTED`: Consent authorisation was rejected by the user and/or the bank.  `AUTHORISED`: Consent is active and ready to be used.  `REVOKED`: Consent has been revoked and can no longer be used.  `EXPIRED`: Consent is no longer valid.

/// The status of the payment consent.  `UNAUTHORISED`: Consent created, but requires user authorisation.  `REJECTED`: Consent authorisation was rejected by the user and/or the bank.  `AUTHORISED`: Consent is active and ready to be used.  `REVOKED`: Consent has been revoked and can no longer be used.  `EXPIRED`: Consent is no longer valid.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PaymentInitiationConsentStatus {
    #[serde(rename = "UNAUTHORISED")]
    UNAUTHORISED,
    #[serde(rename = "AUTHORISED")]
    AUTHORISED,
    #[serde(rename = "REVOKED")]
    REVOKED,
    #[serde(rename = "REJECTED")]
    REJECTED,
    #[serde(rename = "EXPIRED")]
    EXPIRED,

}

impl ToString for PaymentInitiationConsentStatus {
    fn to_string(&self) -> String {
        match self {
            Self::UNAUTHORISED => String::from("UNAUTHORISED"),
            Self::AUTHORISED => String::from("AUTHORISED"),
            Self::REVOKED => String::from("REVOKED"),
            Self::REJECTED => String::from("REJECTED"),
            Self::EXPIRED => String::from("EXPIRED"),
        }
    }
}

impl Default for PaymentInitiationConsentStatus {
    fn default() -> PaymentInitiationConsentStatus {
        Self::UNAUTHORISED
    }
}




